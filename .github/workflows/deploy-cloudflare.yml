name: Deploy to Cloudflare

on:
  push:
    branches: [ main, master ]
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'production'
        type: choice
        options: [production, staging]

env:
  NODE_VERSION: 20
  WEB_PAGES_PROJECT: handywriterz-web
  MF_PAGES_PROJECT: handywriterz-microfeed

jobs:
  build-and-deploy-web:
    name: Web (Pages)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: pnpm

      - name: Setup PNPM
        uses: pnpm/action-setup@v4
        with:
          version: 10
          run_install: false

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Type check (web)
        run: pnpm -C apps/web exec tsc -p tsconfig.app.json --noEmit

      - name: Build web
        run: pnpm -C apps/web build

      - name: Deploy web to Cloudflare Pages
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          command: >-
            pages deploy apps/web/dist
            --project-name=${{ env.WEB_PAGES_PROJECT }}
            --branch=${{ github.ref_name }}

  build-and-deploy-microfeed:
    name: Microfeed (Pages)
    runs-on: ubuntu-latest
    needs: build-and-deploy-web
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: pnpm

      - name: Setup PNPM
        uses: pnpm/action-setup@v4
        with:
          version: 10
          run_install: false

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build microfeed (client assets)
        run: pnpm -C apps/microfeed run build:production

      - name: Deploy microfeed to Cloudflare Pages
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          workingDirectory: apps/microfeed
          command: >-
            pages deploy public
            --project-name=${{ env.MF_PAGES_PROJECT }}
            --branch=${{ github.ref_name }}

  deploy-worker:
    name: Worker (subpath router)
    runs-on: ubuntu-latest
    needs: [build-and-deploy-web, build-and-deploy-microfeed]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Deploy subpath router worker
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          workingDirectory: workers/subpath-router
          # Pass WEB/MICROFEED origins as worker variables
          command: >-
            deploy
            --var WEB_ORIGIN:${{ secrets.WEB_PUBLIC_URL }}
            --var MICROFEED_ORIGIN:${{ secrets.MF_PUBLIC_URL }}
